def shell_sort(a):
    """希尔排序,这个算法是不稳定的"""
    # i是在无序序列中拿到的数
    # gap为步长，
    gap = len(a) // 2
    # 当步长为1时就是插入排序
    while gap >= 1:
        # 外层循环，标志可能需要改变位置的数
        for i in range(gap, len(a)):
            # 内层循环，从外层循环的数开始递减，通过插入排序将该数放在合适的位置
            for j in range(i, 0, -gap):
                if a[j] < a[j-gap]:
                    a[j], a[j-gap] = a[j-gap], a[j]
                else:
                    break
        # 在某个步长下排序完后，减小步长再进行排序
        gap //= 2
        
a_list = [24,26,93,17,99,21,44,55,20,19,19]
print(a_list)
# 传入初始的头部位置和尾部位置
quick_sort(a_list, 0, len(a_list)-1)
print(a_list)
